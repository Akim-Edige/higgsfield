"""v2

Revision ID: f91128f49771
Revises: 001_initial_schema
Create Date: 2025-10-18 22:29:31.404641

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'f91128f49771'
down_revision: Union[str, Sequence[str], None] = '001_initial_schema'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_generation_jobs_next_poll_at', table_name='generation_jobs')
    op.drop_index('ix_generation_jobs_option_id', table_name='generation_jobs')
    op.drop_index('ix_generation_jobs_status', table_name='generation_jobs')
    op.drop_index('ix_generation_jobs_user_id', table_name='generation_jobs')
    op.drop_index('ix_jobs_next_poll', table_name='generation_jobs', postgresql_where="((status)::text = ANY ((ARRAY['PENDING'::character varying, 'RUNNING'::character varying])::text[]))")
    op.drop_index('ix_jobs_provider_job_set_id', table_name='generation_jobs')
    op.drop_index('ix_jobs_status_updated', table_name='generation_jobs')
    op.drop_index('ix_jobs_user_option_idem', table_name='generation_jobs')
    op.drop_table('generation_jobs')
    op.drop_index('ix_attachments_chat_created', table_name='attachments')
    op.create_index('ix_attachments_chat_created', 'attachments', ['chat_id', 'created_at'], unique=False)
    op.create_index('ix_attachments_message', 'attachments', ['message_id'], unique=False)
    op.create_foreign_key(None, 'attachments', 'chats', ['chat_id'], ['id'])
    op.create_foreign_key(None, 'attachments', 'users', ['user_id'], ['id'])
    op.create_foreign_key(None, 'attachments', 'messages', ['message_id'], ['id'], ondelete='SET NULL')
    op.drop_index('ix_chats_user_created', table_name='chats')
    op.create_index('ix_chats_user_created', 'chats', ['user_id', 'created_at', 'id'], unique=False)
    op.drop_index('ix_chats_user_last_message', table_name='chats')
    op.create_index('ix_chats_user_last_message', 'chats', ['user_id', 'last_message_at', 'id'], unique=False)
    op.create_foreign_key(None, 'chats', 'users', ['user_id'], ['id'])
    op.drop_index('ix_messages_chat_created', table_name='messages')
    op.create_index('ix_messages_chat_created', 'messages', ['chat_id', 'created_at', 'id'], unique=False)
    op.create_foreign_key(None, 'messages', 'chats', ['chat_id'], ['id'])
    op.create_foreign_key(None, 'options', 'messages', ['message_id'], ['id'])
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint(None, 'options', type_='foreignkey')
    op.drop_constraint(None, 'messages', type_='foreignkey')
    op.drop_index('ix_messages_chat_created', table_name='messages')
    op.create_index('ix_messages_chat_created', 'messages', ['chat_id', sa.text('created_at DESC'), sa.text('id DESC')], unique=False)
    op.drop_constraint(None, 'chats', type_='foreignkey')
    op.drop_index('ix_chats_user_last_message', table_name='chats')
    op.create_index('ix_chats_user_last_message', 'chats', ['user_id', sa.text('last_message_at DESC'), sa.text('id DESC')], unique=False)
    op.drop_index('ix_chats_user_created', table_name='chats')
    op.create_index('ix_chats_user_created', 'chats', ['user_id', sa.text('created_at DESC'), sa.text('id DESC')], unique=False)
    op.drop_constraint(None, 'attachments', type_='foreignkey')
    op.drop_constraint(None, 'attachments', type_='foreignkey')
    op.drop_constraint(None, 'attachments', type_='foreignkey')
    op.drop_index('ix_attachments_message', table_name='attachments')
    op.drop_index('ix_attachments_chat_created', table_name='attachments')
    op.create_index('ix_attachments_chat_created', 'attachments', ['chat_id', sa.text('created_at DESC')], unique=False)
    op.create_table('generation_jobs',
    sa.Column('id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('option_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('user_id', sa.UUID(), autoincrement=False, nullable=False),
    sa.Column('idempotency_key', sa.TEXT(), autoincrement=False, nullable=False),
    sa.Column('status', sa.VARCHAR(), server_default=sa.text("'PENDING'::character varying"), autoincrement=False, nullable=False),
    sa.Column('provider', sa.VARCHAR(), server_default=sa.text("'higgsfield'::character varying"), autoincrement=False, nullable=False),
    sa.Column('provider_job_set_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('progress', sa.SMALLINT(), autoincrement=False, nullable=True),
    sa.Column('attempts', sa.INTEGER(), server_default=sa.text('0'), autoincrement=False, nullable=False),
    sa.Column('last_error_code', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('last_error_message', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('last_polled_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('next_poll_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('timeout_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('started_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('finished_at', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    sa.Column('output_urls', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('output_meta', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True),
    sa.Column('trace_id', sa.TEXT(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.Column('updated_at', postgresql.TIMESTAMP(timezone=True), server_default=sa.text('now()'), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('id', name='generation_jobs_pkey')
    )
    op.create_index('ix_jobs_user_option_idem', 'generation_jobs', ['user_id', 'option_id', 'idempotency_key'], unique=True)
    op.create_index('ix_jobs_status_updated', 'generation_jobs', ['status', 'updated_at'], unique=False)
    op.create_index('ix_jobs_provider_job_set_id', 'generation_jobs', ['provider_job_set_id'], unique=True)
    op.create_index('ix_jobs_next_poll', 'generation_jobs', ['next_poll_at'], unique=False, postgresql_where="((status)::text = ANY ((ARRAY['PENDING'::character varying, 'RUNNING'::character varying])::text[]))")
    op.create_index('ix_generation_jobs_user_id', 'generation_jobs', ['user_id'], unique=False)
    op.create_index('ix_generation_jobs_status', 'generation_jobs', ['status'], unique=False)
    op.create_index('ix_generation_jobs_option_id', 'generation_jobs', ['option_id'], unique=False)
    op.create_index('ix_generation_jobs_next_poll_at', 'generation_jobs', ['next_poll_at'], unique=False)
    # ### end Alembic commands ###
